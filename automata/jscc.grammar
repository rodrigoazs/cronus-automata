!	' |\r|\n|\t|//[^\n]*'

	'{'
	'}'
	'/'
	':'
	'<'
	'>'
	'\('
	'\)'
	','
	'[A-Za-z_][A-Za-z0-9_]*'	Identifier
	'\"([^\"]|\"\")*\"'		String		[* %match = %match.substr( 1, %match.length - 2 );
								   %match = %match.replace( /''/g, "\'" );	*]
	'\[([^\"]|\"\")*\]'		Array		[* %match = %match.substr( 1, %match.length - 2 );
								   %match = %match.replace( /''/g, "\'" );	*]							   
	'[0-9]+'			Integer
	;

##

Program:	Identifier ':' '(' Stmt_List ')'			
		|
		;

Stmt_List:	Stmt_List Stmt			
		|
		;
								
Stmt:		'{' Expression_List '}' 		
		|   '{' Expression_List '}' ','
		;

Expression_List: Expression_List Expression
		|
		;
				
Expression:	Identifier ':' Value
		;

Value:		Integer				
		| Identifier			
		| String
		| '<' String '>'
		| Array
		| '{' Expression '}'		
		;

[*

function open_file( file )
{
	var allText = 0;
    var rawFile = new XMLHttpRequest();
    rawFile.open("GET", file, false);
    rawFile.onreadystatechange = function ()
    {
        if(rawFile.readyState === 4)
        {
            if(rawFile.status === 200 || rawFile.status == 0)
            {
                allText = rawFile.responseText;
            }
        }
    }
    rawFile.send(null);
    return allText;
}

var str = open_file('file:////home/rodrigo/Desktop/jscc/webenv/item_db.conf');
var error_cnt 	= 0;
var error_off	= new Array();
var error_la	= new Array();

if( ( error_cnt = __parse( str, error_off, error_la ) ) > 0 )
{
	for( i = 0; i < error_cnt; i++ )
		alert( "Parse error near >" 
			+ str.substr( error_off[i], 30 ) + "<, expecting \"" + error_la[i].join() + "\"" );
}
*]